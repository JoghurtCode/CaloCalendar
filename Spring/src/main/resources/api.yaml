openapi: 3.0.3
info:
  title: User API
  description: API for managing users
  version: 1.0.0

servers:
  - url: http://localhost:8080/api

paths:
  /users:
    get:
      summary: Get all users
      operationId: getUsers
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserProfileModel'
    post:
      summary: Create a new user
      operationId: createUser
      requestBody:
        description: User to create
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileModel'
      responses:
        '201':
          description: User created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileModel'

  /users/{id}:
    get:
      summary: Get a user by ID
      operationId: getUserById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: User found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileModel'
        '404':
          description: User not found

    put:
      summary: Update a user by ID
      operationId: updateUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        description: User data to update
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileModel'
      responses:
        '200':
          description: User updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileModel'
        '404':
          description: User not found

    delete:
      summary: Delete a user by ID
      operationId: deleteUser
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '204':
          description: User deleted successfully
        '404':
          description: User not found

components:
  schemas:
    UserProfileModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        userName:
          type: string
        gender:
          type: integer
        age:
          type: integer
        weight:
          type: number
          format: float
        levelOfPhysicalActivity:
          type: integer
      required:
        - userName
        - gender
        - age
        - weight
        - levelOfPhysicalActivity
    GroceryItemModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        name:
          type: string
        calories:
          type: integer
        weight:
          type: integer
    MealModel:
      type: object
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
        mealName:
          type: string